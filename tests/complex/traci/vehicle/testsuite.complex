# tests for vehicle mapping
moveToXY

# Tests the openGap() method.
openGap
replaceStop

# test taxi API
taxi

# Tests the vehicle API
vehicle

# Tests the vehicle API for the sublane-case. This uses the same runner as the 'vehicle' test case
vehicle_sublane

# Test traci advices while action-step > simstep. The second command is triggered in between actionsteps and should take effect immediately.
vehicle_asl

# Test traci advices while action-step > simstep. The second command is triggered in between actionsteps and should take effect immediately.
vehicle_sublane_asl

# simple context subscription test (less generic than then the contextSubscriptions suite)
vehicle_context

# Tests the stop resume
resume

# Tests the distance retrieval after rerouting
distance_after_reroute

# test retrieval of upcoming traffic lights
nextTLS

# Tests traci.vehicle.getNeighbors() method
getNeighbors

# Tests traci.vehicle.getNeighbors() method in presence of multiple leaders/followers
getNeighborsSublane

# use changeLaneRelative to change to the opposite side and back
changeOpposite

# test reaction to an invalid changeRelative command in a network that allows opposite direction driving (#6576)
changeRelative_invalid

# use changeLaneRelative to change to the opposite side and back using the default laneChangeMode
changeOpposite_default

# test estimated public transport stop delay
stopDelay

# test estimated public transport stop delay along a path with varying speeds
stopDelay2

# compare getFollowSpeed and actual speed
getFollowSpeed

# check whether vehicles moved with moveTo can register on a detector
moveTo_detector

# retrieve stops with limits
getStops

# retrieve stops from the past after loading state
pastStops_stateLoaded

# set rerouting device parameter period
setReroutingPeriod

# test timing of slowDown command
slowDown

# test timing of slowDown command
slowDown_subsecond
getFollower

# test access to driverstate parameters
driverstate
